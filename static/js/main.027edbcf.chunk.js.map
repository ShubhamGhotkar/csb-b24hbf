{"version":3,"sources":["component/Pagination/PaginationPage.jsx","component/Card/Card.jsx","component/Pagination/Pagination.jsx","component/Header/Header.jsx","component/Data/Data.js","component/PopularMovie/PopularMovie.jsx","component/TopRatedMovie/TopRatedMovie.jsx","component/UpcomingMovie/UpcomingMovie.jsx","component/MovieDetails/CastPage/Cast.jsx","component/MovieDetails/Details/MovieDetails.jsx","App.js","index.js"],"names":["PaginationPage","_ref","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","_jsx","className","children","map","number","onClick","href","Card","prop","_jsxs","Link","to","state","src","concat","poster_path","alt","title","style","color","vote_average","Pagination","data","_useState","useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","currentPage","setCurrentPage","_useState5","useEffect","fetchPosts","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_toConsumableArray","stop","apply","arguments","indexOfLastPost","indexOfFirstPost","currentPosts","slice","item","ind","length","pageNumber","Header","Data","URL","movie","setMovie","query","setQuery","fetch","then","res","json","results","searchMovie","e","_URL","preventDefault","sent","t0","console","log","_x","handleChange","target","value","_ref3","_callee2","_context2","_Fragment","expand","Navbar","bg","fixed","Container","fluid","Brand","Toggle","Offcanvas","id","placement","closeButton","Title","Body","Nav","Form","onSubmit","Control","type","placeholder","onChange","Button","variant","setData","PopularMovie","movieData","setMovieData","error","TopRatedMovie","setTopRatedMovie","UpcomingMovie","upcomingMovie","setUpcominMovie","Cast","profile_path","name","character","MovieDetails","MovieDetail","setMovieDetail","castDetails","setCastDetails","location","useLocation","cast","iconStyle","backgroundImage","backdrop_path","generesFun","genres","runtime","release_date","overview","App","BrowserRouter","Routes","Route","path","element","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.027edbcf.chunk.js","sourcesContent":["const PaginationPage = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav className=\"pag-nav mr-3 \">\r\n      <ul className=\"pagination mr-2 fixed\">\r\n        {pageNumbers.map((number) => (\r\n          <li key={number} className=\"page-item mr-1\">\r\n            <a onClick={() => paginate(number)} href=\"!#\" className=\"page-link\">\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default PaginationPage;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./card-style.css\";\r\n\r\nconst Card = ({ prop }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <Link to=\"/moviedetails\" state={prop}>\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w500/${prop.poster_path}`}\r\n          alt=\"img\"\r\n        />\r\n      </Link>\r\n      <p className=\"tittle\">{prop.title}</p>\r\n      <p className=\"movie-rating\" style={{ color: \"red\" }}>\r\n        Rating : {prop.vote_average}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import PaginationPage from \"./PaginationPage\";\r\nimport Card from \"../Card/Card\";\r\nimport \"./pagination-style.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Pagination = ({ data }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(8);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setPosts([...data]);\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [data]);\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"movie-container\">\r\n      {currentPosts.map((item, ind) => (\r\n        <Card prop={item} key={ind} />\r\n      ))}\r\n      <PaginationPage\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./navbar-style.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Header({ Data, URL }) {\r\n  const [movie, setMovie] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setMovie(data.results);\r\n      });\r\n  }, [URL]);\r\n\r\n  const searchMovie = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const URL = `https://api.themoviedb.org/3/search/movie?api_key=c45a857c193f6302f2b5061c3b85e743&language=en-US&query=${query}&page=1`;\r\n      const res = await fetch(URL);\r\n      const data = await res.json();\r\n      setMovie(data.results);\r\n      setQuery(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      Data(movie);\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [movie]);\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <div className=\"nav-container\">\r\n          {[\"md\"].map((expand) => (\r\n            <Navbar\r\n              key={expand}\r\n              bg=\"dark  \"\r\n              expand={expand}\r\n              className=\"mb-3 width-100 \"\r\n              fixed=\"top\"\r\n            >\r\n              <Container fluid className=\"mx-5 width-80\">\r\n                <Navbar.Brand href=\"#\" className=\"text-white mx-5\">\r\n                  MovieDb\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle\r\n                  className=\"bg-white\"\r\n                  aria-controls={`offcanvasNavbar-expand-${expand}`}\r\n                />\r\n                <Navbar.Offcanvas\r\n                  id={`offcanvasNavbar-expand-${expand}`}\r\n                  aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}\r\n                  placement=\"end\"\r\n                >\r\n                  <Offcanvas.Header closeButton>\r\n                    <Offcanvas.Title\r\n                      id={`offcanvasNavbarLabel-expand-${expand}`}\r\n                    >\r\n                      Offcanvas\r\n                    </Offcanvas.Title>\r\n                  </Offcanvas.Header>\r\n                  <Offcanvas.Body>\r\n                    <Nav className=\"justify-content-end flex-grow-1 pe-3 text-dark bg-dark \">\r\n                      <Nav.Link href=\"/popular\" className=\"text-white p-2 mx-2\">\r\n                        Popular\r\n                      </Nav.Link>\r\n                      <Nav.Link\r\n                        href=\"/topratedmovie\"\r\n                        className=\"text-white p-2 mx-2\"\r\n                      >\r\n                        Top Rated\r\n                      </Nav.Link>\r\n                      <Nav.Link\r\n                        href=\"/upcomingmovie\"\r\n                        className=\"text-white p-2 mx-2\"\r\n                      >\r\n                        Upcoming\r\n                      </Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Form className=\"d-flex mx-3 \" onSubmit={searchMovie}>\r\n                      <Form.Control\r\n                        type=\"search\"\r\n                        placeholder=\"Movie Name\"\r\n                        className=\"me-2  shadow-none\"\r\n                        aria-label=\"Search\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Nav.Link href=\"/search\" className=\"text-white p-2 mx-2\">\r\n                        <Button\r\n                          variant=\"secondary - Secondary\"\r\n                          className=\"search-btn mx-2\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Search\r\n                        </Button>\r\n                      </Nav.Link>\r\n                    </Form>\r\n                  </Offcanvas.Body>\r\n                </Navbar.Offcanvas>\r\n              </Container>\r\n            </Navbar>\r\n          ))}\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useState } from \"react\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport Header from \"../Header/Header\";\r\n\r\nconst Data = ({ Data, URL }) => {\r\n  const [data, setData] = useState(Data);\r\n  const getData = (data) => setData(data);\r\n\r\n  return (\r\n    <>\r\n      <Header Data={getData} URL={URL} />\r\n      <Pagination data={data} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Data;\r\n","import Data from \"../Data/Data\";\r\nimport \"./popular-movie-style.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst URL =\r\n  \"https://api.themoviedb.org/3/movie/popular?api_key=c45a857c193f6302f2b5061c3b85e743&language=en-US&page=1\";\r\nconst PopularMovie = () => {\r\n  const [movieData, setMovieData] = useState([]);\r\n  useEffect(() => {\r\n    try {\r\n      fetch(URL)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setMovieData(data.results);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"movie-container\">\r\n        <Data Data={movieData} URL={URL} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PopularMovie;\r\n","import Data from \"../Data/Data\";\r\n// import \"../Popular Movie/popular-movie-style.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst URL =\r\n  \"https://api.themoviedb.org/3/movie/top_rated?api_key=c45a857c193f6302f2b5061c3b85e743&language=en-US&page=1\";\r\n\r\nconst TopRatedMovie = () => {\r\n  const [TopRatedMovie, setTopRatedMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      fetch(URL)\r\n        .then((res) => res.json())\r\n        .then((data) => setTopRatedMovie(data.results));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"movie-container\">\r\n        <Data Data={TopRatedMovie} URL={URL} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TopRatedMovie;\r\n","import Data from \"../Data/Data\";\r\nimport { useEffect, useState } from \"react\";\r\n// import \"../Popular Movie/popular-movie-style.css\";\r\n\r\nconst URL =\r\n  \"https://api.themoviedb.org/3/movie/upcoming?api_key=c45a857c193f6302f2b5061c3b85e743&language=en-US&page=1\";\r\nconst UpcomingMovie = () => {\r\n  const [upcomingMovie, setUpcominMovie] = useState([]);\r\n  useEffect(() => {\r\n    fetch(URL)\r\n      .then((res) => res.json())\r\n      .then((data) => setUpcominMovie(data.results));\r\n  }, []);\r\n  return (\r\n    <main>\r\n      <div className=\"movie-container\">\r\n        <Data Data={upcomingMovie} URL={URL} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovie;\r\n","import \"./cast-style.css\";\r\nconst Cast = ({ prop }) => {\r\n  return (\r\n    <div className=\"cast-div\">\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w500${prop.profile_path}`}\r\n        alt=\"img\"\r\n      />\r\n      <p className=\"name\">{prop.name}</p>\r\n      <p className=\"character\">Character : {prop.character}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import Cast from \"../CastPage/Cast\";\r\nimport Header from \"../../Header/Header\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./movieDetail-style.css\";\r\n\r\nconst MovieDetails = () => {\r\n  const [MovieDetail, setMovieDetail] = useState([]);\r\n  const [castDetails, setCastDetails] = useState([]);\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${location.state.id}?api_key=c45a857c193f6302f2b5061c3b85e743&language=en-US`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setMovieDetail(data));\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${location.state.id}/credits?api_key=c45a857c193f6302f2b5061c3b85e743&language=en-US`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setCastDetails(data.cast));\r\n    // setGeneresArr(MovieDetail.genres)\r\n  });\r\n\r\n  const iconStyle = {\r\n    backgroundImage: `url(https://image.tmdb.org/t/p/w500${MovieDetail.backdrop_path})`\r\n  };\r\n\r\n  useEffect(() => {\r\n    const generesFun = async () => {};\r\n\r\n    generesFun();\r\n  }, [MovieDetail]);\r\n\r\n  const genres =\r\n    MovieDetail.genres && MovieDetail.genres.length > 0\r\n      ? MovieDetail.genres.map((item) => (\r\n          <span key={item.id}>{item.name + \" , \"}</span>\r\n        ))\r\n      : \"\";\r\n\r\n  return (\r\n    <main>\r\n      <Header />\r\n      <div className=\"div-container\">\r\n        <br />\r\n        <div className=\"grid-container\">\r\n          <div className=\"icon-div\" style={iconStyle}></div>\r\n          <div className=\"details-div\">\r\n            <p className=\"movie-title\">{MovieDetail.title}</p>\r\n            <p className=\"rating\">Rating : {MovieDetail.vote_average}</p>\r\n            <span className=\"flex\">\r\n              <button>{MovieDetail.runtime} min</button>\r\n              <span>{genres}</span>\r\n            </span>\r\n            <p className=\"release-date\">\r\n              Release Date : {MovieDetail.release_date}\r\n            </p>\r\n          </div>\r\n          <div className=\"overview-div\">\r\n            <p className=\"tittle\">Overview</p>\r\n            <p className=\"description\">{MovieDetail.overview}</p>\r\n          </div>\r\n          <div className=\"img-div\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500${MovieDetail.poster_path}`}\r\n              alt=\"img\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <p className=\"cast-tittle\">CAST</p>\r\n\r\n      <div className=\"cast-container\">\r\n        {castDetails.map((item, ind) => {\r\n          return <Cast prop={item} key={ind} />;\r\n        })}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import \"./styles.css\";\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport PopularMovie from \"./component/PopularMovie/PopularMovie\";\nimport TopRatedMovie from \"./component/TopRatedMovie/TopRatedMovie\";\nimport UpcomingMovie from \"./component/UpcomingMovie/UpcomingMovie\";\nimport MovieDetails from \"./component/MovieDetails/Details/MovieDetails\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"*\" element={<PopularMovie />} />\n          <Route path=\"/popular/:id\" element={<PopularMovie />} />\n          <Route path=\"/topratedmovie\" element={<TopRatedMovie />} />\n          <Route path=\"/upcomingmovie\" element={<UpcomingMovie />} />\n          <Route path=\"/moviedetails\" element={<MovieDetails />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}